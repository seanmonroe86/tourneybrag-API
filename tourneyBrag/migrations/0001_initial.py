# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2017-04-08 00:44
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('adminID', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('admin_name', models.CharField(max_length=30)),
                ('password', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Banned',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bannedUser', models.CharField(max_length=30)),
                ('adminID', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tourneyBrag.Administrator')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=30)),
                ('receiver_name', models.CharField(max_length=30)),
                ('actual_comment', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Entrant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_entrant', models.CharField(max_length=30)),
                ('has_been_accepted', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='Fan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_Fan', models.CharField(max_length=30)),
                ('user_Idol', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('matchID', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('playerWinner', models.CharField(max_length=30)),
                ('playerLoser', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Organizer',
            fields=[
                ('organizerID', models.CharField(max_length=30, primary_key=True, serialize=False)),
                ('organizerName', models.CharField(max_length=30)),
                ('password', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('playerName', models.CharField(max_length=30, unique=True)),
                ('password', models.CharField(max_length=30)),
                ('gamePlayed', models.CharField(max_length=50)),
                ('mainCharacter', models.CharField(max_length=30)),
                ('playerID', models.CharField(max_length=15, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='Record',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_winner', models.CharField(max_length=30)),
                ('player_loser', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Tournament',
            fields=[
                ('organizerOwner', models.CharField(max_length=30)),
                ('tournamentTitle', models.CharField(max_length=30, primary_key=True, serialize=False, unique=True)),
                ('date_created', models.DateTimeField(verbose_name='date_created')),
                ('date_start', models.DateTimeField(verbose_name='start date')),
                ('organizerOwnerID', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tourneyBrag.Organizer')),
            ],
        ),
        migrations.CreateModel(
            name='Voucher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_voucher', models.CharField(max_length=30)),
                ('user_receiver', models.CharField(max_length=30)),
                ('receiverID', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tourneyBrag.Organizer')),
            ],
        ),
        migrations.AddField(
            model_name='record',
            name='tournament_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='tourneyBrag.Tournament'),
        ),
        migrations.AddField(
            model_name='match',
            name='tournamentName',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tourneyBrag.Tournament'),
        ),
        migrations.AddField(
            model_name='fan',
            name='idolID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tourneyBrag.Player'),
        ),
        migrations.AddField(
            model_name='entrant',
            name='tournament_entered',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='tourneyBrag.Tournament'),
        ),
    ]
